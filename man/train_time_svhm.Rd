% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_time_svhm.R
\name{train_time_svhm}
\alias{train_time_svhm}
\title{Train SVHM}
\usage{
train_time_svhm(
  train,
  test,
  covariates,
  cost,
  opt = "osqp",
  gamma_squared = 0.5
)
}
\arguments{
\item{train}{training dataset}

\item{test}{test dataset}

\item{cost}{cost parameter of the support vector machine of type numeric}

\item{opt}{which quadratic optimization is used (\code{opt='mosek'} or \code{opt='osqp'})}

\item{gamma_squared}{width of gaussian kernel}
}
\value{
{trained model with
         \code{$e_vec} vector indicating if an event happens at each event time
         \code{$sol} calculated optimal solution for each event time
         \code{$train} train dataset with risk scores
         \code{$test} test dataset with risk scores
}
}
\description{
Uses the Rmosek or osqp package to train the time dependent SVHM on a given training and test set. The training calculates the risk scores and
the optimal decision function values for each individual at every event time of the training set.
The columns of the dataset must contain
\code{id, futime, death, covariates, lt, rt}
where \code{lt} and \code{rt} are the start and end times of each time interval. the \code{death} column must also be logical values.
}
\examples{
{
library(timereg)
library(SVHM)

data(csl)

df <- csl

names(df)[names(df) == "dc"] <- "death"

names(df)[names(df) == "eventT"] <- "futime"

df <- transform(df,
               death = as.logical(death))


df<-split(df, df$id)

df[sample(1:length(df))]

partition <- SVHM:::createListPartition(df, 1, test_size=.3)

df_test <- partition$"test"

df_train <- partition[["1"]]

trained_model <- train_time_svhm(df_train, df_test, c("sex"), 10, opt="osqp", gamma_squared=100)
}

}
